package pg {	import flash.display.DisplayObject;	import flash.display.Bitmap;	import flash.display.BitmapData;	import flash.display.DisplayObjectContainer;	import flash.display.IBitmapDrawable;	import flash.display.Sprite;	import flash.events.Event;	import flash.geom.Matrix;
		public class BlitSequence extends Sprite {				private var sequence:Vector.<BitmapData> = new Vector.<BitmapData>();		private var sequencePositionX:Vector.<Number> = new Vector.<Number>();		private var sequencePositionY:Vector.<Number> = new Vector.<Number>();		private var display:Bitmap = new Bitmap();		private var currentFrame:int = 0;		private var target:DisplayObject;				public var isComplete:Boolean = false;				public function BlitSequence(f_target:DisplayObject):void{			target = f_target;		}				public function addToSequence():void{			if (target){				var bm:Bitmap = Blit.getBitmap(target);				sequence.push(bm.bitmapData);				sequencePositionX.push(bm.x);				sequencePositionY.push(bm.y);			}		}				public function replaceTargetWithSequence():void{			var p:DisplayObjectContainer = target.parent;			if (p){				var depth:int = p.getChildIndex(target);				p.addChildAt(display, depth);				p.removeChild(target);			}		}				public function nextFrame(e:Event):void{			var i:int = ++currentFrame % sequence.length			display.bitmapData = sequence[i];			display.x = sequencePositionX[i];			display.y = sequencePositionY[i];		}				public function prevFrame(e:Event):void{			var i:int = --currentFrame % sequence.length			display.bitmapData = sequence[i];			display.x = sequencePositionX[i];			display.y = sequencePositionY[i];		}				public function play():void{			addEventListener(Event.ENTER_FRAME, nextFrame);			removeEventListener(Event.ENTER_FRAME, prevFrame);		}				public function playBackward():void{			addEventListener(Event.ENTER_FRAME, prevFrame);			removeEventListener(Event.ENTER_FRAME, nextFrame);		}				public function stop():void{			removeEventListener(Event.ENTER_FRAME, nextFrame);			removeEventListener(Event.ENTER_FRAME, prevFrame);		}				override public function set x(f_value:Number):void{			display.x = f_value;		}				override public function get x():Number{			return display.x;		}				override public function set y(f_value:Number):void{			display.y = f_value;		}				override public function get y():Number{			return display.y;		}	}}
package pg.draw{	import flash.display.Bitmap;	import flash.display.BitmapData;	import flash.geom.Matrix;	import flash.display.Shape;	import flash.display.Sprite;	public class Stripes extends Sprite	{		private var stripeMatrix:Matrix;		private var stripeShape:Shape;		private var stripeBMD:BitmapData;		private var stripeBM:Bitmap		private var _sWidth:Number;		private var _sHeight:Number;		public function Stripes(f_width:Number, f_height:Number):void{			_sWidth = f_width			_sHeight = f_height			stripeMatrix = new Matrix();			stripeShape = new Shape();			stripeBMD = new BitmapData(f_width, f_height, true, 0);			stripeBM = new Bitmap(stripeBMD);			addChild(stripeBM);		}		public function drawStripes(f_direction:String, f_separation:Number, f_width:Number = 1, f_color:Number = 0xffffff, f_alpha:Number = 1):void{			stripeShape.graphics.clear();			var f_height:Number = stripeBM.height;			switch (f_direction){				case "up":				case "left":				case "forward":					stripeShape.graphics.beginFill(f_color, f_alpha);					stripeShape.graphics.moveTo(0, f_height);					stripeShape.graphics.lineTo(f_width, f_height);					stripeShape.graphics.lineTo(f_height + f_width, 0);					stripeShape.graphics.lineTo(f_height, 0);					stripeShape.graphics.lineTo(0, f_height);					stripeShape.graphics.endFill();					break;				case "down":				case "right":				case "back":					stripeShape.graphics.beginFill(f_color, f_alpha);					stripeShape.graphics.moveTo(f_width, 0);					stripeShape.graphics.lineTo(0, 0);					stripeShape.graphics.lineTo(f_height, f_height);					stripeShape.graphics.lineTo(f_height + f_width, f_height);					stripeShape.graphics.lineTo(f_width, 0);					stripeShape.graphics.endFill();					break;				case "vertical":					stripeShape.graphics.beginFill(f_color, f_alpha);					stripeShape.graphics.drawRect(0, 0, f_width, f_height);					stripeShape.graphics.endFill();					break;				case "horizontal":					stripeShape.graphics.beginFill(f_color, f_alpha);					stripeShape.graphics.drawRect(0, 0, stripeBM.width, f_width);					stripeShape.graphics.endFill();					break;			}			stripeBMD.lock();			for (var i:int = -stripeBMD.height; i < stripeBMD.width + stripeBMD.height; i += f_separation + f_width){				if(f_direction == "horizontal"){					stripeMatrix.ty = i;				} else {					stripeMatrix.tx = i;				}				stripeBMD.draw(stripeShape, stripeMatrix);			}			stripeBMD.unlock();		}		public function clear():void{			stripeBMD.dispose();			stripeBMD = new BitmapData(_sWidth, _sHeight, true, 0);			stripeBM.bitmapData = stripeBMD;		}				public function set sHeight(value:Number):void{			_sHeight = value;			clear();		}				public function set sWidth(value:Number):void{			_sWidth = value;			clear();		}					}}